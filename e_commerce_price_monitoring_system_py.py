# -*- coding: utf-8 -*-
"""E-commerce Price Monitoring System.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vSOjuOFvUJd7rTmMZKhscLVTxImgdr0k
"""

import requests
from bs4 import BeautifulSoup
import smtplib
import time
import csv
from datetime import datetime

# Configuration
PRODUCT_URL = "https://www.amazon.com/dp/B08N5WRWNW"  # Example product
USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
HEADERS = {"User-Agent": USER_AGENT, "Accept-Language": "en-US,en;q=0.9"}
PRICE_THRESHOLD = 800  # Alert if price drops below this
CHECK_INTERVAL = 86400  # 24 hours in seconds

def get_product_data():
    try:
        response = requests.get(PRODUCT_URL, headers=HEADERS)
        soup = BeautifulSoup(response.content, 'html.parser')

        # Extract product details
        title = soup.find("span", id="productTitle").get_text().strip()
        price_str = soup.find("span", class_="a-price-whole").get_text()
        price = float(price_str.replace(',', ''))

        return {
            "title": title,
            "price": price,
            "timestamp": datetime.now().isoformat()
        }
    except Exception as e:
        print(f"Error: {e}")
        return None

def send_email_alert(product_data):
    # Email configuration (replace with your details)
    sender = "your_email@gmail.com"
    receiver = "target_email@example.com"
    password = "your_app_password"  # Use app-specific password

    subject = f"Price Alert for {product_data['title']}!"
    body = (f"Price dropped to ${product_data['price']:.2f}\n\n"
            f"Product Link: {PRODUCT_URL}")

    try:
        with smtplib.SMTP("smtp.gmail.com", 587) as server:
            server.starttls()
            server.login(sender, password)
            message = f"Subject: {subject}\n\n{body}"
            server.sendmail(sender, receiver, message)
        print("Price alert email sent!")
    except Exception as e:
        print(f"Email failed: {e}")

def log_to_csv(product_data):
    with open("price_history.csv", "a", newline="", encoding="utf-8") as f:
        writer = csv.DictWriter(f, fieldnames=["title", "price", "timestamp"])
        if f.tell() == 0:  # Write header if file is empty
            writer.writeheader()
        writer.writerow(product_data)

def main():
    while True:
        product_data = get_product_data()
        if product_data:
            print(f"Current Price: ${product_data['price']:.2f}")
            log_to_csv(product_data)

            if product_data["price"] < PRICE_THRESHOLD:
                send_email_alert(product_data)

        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()